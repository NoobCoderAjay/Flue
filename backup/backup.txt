import React, { useState } from "react";
import { StyleSheet, View } from "react-native";
import AppLoading from "expo-app-loading";
import {
  useFonts,
  LibreBaskerville_400Regular,
} from "@expo-google-fonts/libre-baskerville";
import { SafeAreaView } from "react-native-safe-area-context";
import { NavigationContainer } from "@react-navigation/native";
import { createStackNavigator } from "@react-navigation/stack";
import { createDrawerNavigator } from "@react-navigation/drawer";
import DrawerContent from "./Drawer/Drawer";
import FirstScreen from "./components/firstScreen";
import SecondScreen from "./components/secondScreen";
import ThirdScreen from "./components/thirdScreen";
import FourthScreen from "./components/fourthScreen";
import EditButtonScreen from "./editButton/EditButtonScreen";
import FirstPage from "./pages/firstPage";
import SuccessScreen from "./pages/successScreen";
import AdvanceToolScreen from "./AdvancedTools/AdvanceToolScreen";
import { createBottomTabNavigator } from "@react-navigation/bottom-tabs";
import HomeScreen from "./BottomScreens/HomeScreen";
import ActivityScreen from "./BottomScreens/ActivityScreen";
import AddUserScreen from "./BottomScreens/AddUserScreen";
import BasesScreen from "./BottomScreens/BasesScreen";
import ProfileScreen from "./BottomScreens/ProfileScreen";
import { Image } from "react-native";
//@ts-ignore
import ProfileTab from "./assets/images/ProfileTab.png";
//@ts-ignore
import Base from "./assets/images/Base.png";
//@ts-ignore
import Activity from "./assets/images/Activity.png";
//@ts-ignore
import AddImage from "./assets/images/AddImage.png";
//@ts-ignore
import HomeImage from "./assets/images/HomeImage.png";

const Tab = createBottomTabNavigator();
const Drawer = createDrawerNavigator();
const Stack = createStackNavigator();

export default function App() {
  const [fontsLoaded] = useFonts({
    LibreBaskerville_400Regular,
  });
  const [activeIndex, setActiveIndex] = useState<number>(0);
  const [drawerOpen, setDrawerOpen] = useState(false);

  const totalScreens = 4;

  if (!fontsLoaded) {
    return <AppLoading />;
  }

  const handleScreenChange = (index: number) => {
    setActiveIndex(index);
  };

  return (
    <SafeAreaView style={styles.container}>
      <NavigationContainer>
        {/* <Drawer.Navigator drawerContent={(props) => <DrawerContent />}>
          <Drawer.Screen name="Screens" options={{ headerShown: false }}>
            {() => (
              <Stack.Navigator initialRouteName="FirstScreen">
                <Stack.Screen
                  name="FirstScreen"
                  options={{ headerShown: false }}
                >
                  {(props) => (
                    <FirstScreen
                      {...props}
                      onScreenChange={handleScreenChange}
                    />
                  )}
                </Stack.Screen>
                <Stack.Screen
                  name="SecondScreen"
                  options={{ headerShown: false }}
                >
                  {(props) => (
                    <SecondScreen
                      {...props}
                      onScreenChange={handleScreenChange}
                    />
                  )}
                </Stack.Screen>
                <Stack.Screen
                  name="ThirdScreen"
                  options={{ headerShown: false }}
                >
                  {(props) => (
                    <ThirdScreen
                      {...props}
                      onScreenChange={handleScreenChange}
                    />
                  )}
                </Stack.Screen>
                <Stack.Screen
                  name="FourthScreen"
                  options={{ headerShown: false }}
                >
                  {(props) => (
                    <FourthScreen
                      {...props}
                      onScreenChange={handleScreenChange}
                    />
                  )}
                </Stack.Screen>
                <Stack.Screen
                  name="EditButtonScreen"
                  component={EditButtonScreen}
                  options={{ headerShown: false }}
                />
                <Stack.Screen
                  name="FirstPage"
                  component={FirstPage}
                  options={{ headerShown: false }}
                />
                <Stack.Screen
                  name="SuccessScreen"
                  component={SuccessScreen}
                  options={{ headerShown: false }}
                />
                <Stack.Screen
                  name="AdvancedToolScreen"
                  component={AdvanceToolScreen}
                  options={{ headerShown: false }}
                />
              </Stack.Navigator>
            )}
          </Drawer.Screen>
        </Drawer.Navigator> */}
        <Tab.Navigator
          screenOptions={{
            tabBarActiveTintColor: "#FFFFFF",
            tabBarInactiveTintColor: "#006271",
            tabBarStyle: {
              backgroundColor: "#006271",
            },
          }}
        >
          <Tab.Screen
            name="Home"
            component={HomeScreen}
            options={{
              headerShown: false,
              tabBarIcon: ({ focused }) => (
                <Image
                  source={HomeImage}
                  style={{ width: 24, height: 24 }}
                  resizeMode="contain"
                />
              ),
            }}
          />
          <Tab.Screen
            name="Activity"
            component={ActivityScreen}
            options={{
              headerShown: false,
              tabBarIcon: ({ focused }) => (
                <Image
                  source={Activity}
                  style={{ width: 24, height: 24 }}
                  resizeMode="contain"
                />
              ),
            }}
          />
          <Tab.Screen
            name="AddUserScreen"
            component={AddUserScreen}
            options={{
              headerShown: false,
              tabBarIcon: ({ focused }) => (
                <Image
                  source={AddImage}
                  style={{ width: 24, height: 24 }}
                  resizeMode="contain"
                />
              ),
            }}
          />
          <Tab.Screen
            name="BasesScreen"
            component={BasesScreen}
            options={{
              headerShown: false,
              tabBarIcon: ({ focused }) => (
                <Image
                  source={Base}
                  style={{ width: 24, height: 24 }}
                  resizeMode="contain"
                />
              ),
            }}
          />
          <Tab.Screen
            name="ProfileScreen"
            component={ProfileScreen}
            options={{
              headerShown: false,
              tabBarIcon: ({ focused }) => (
                <Image
                  source={ProfileTab}
                  style={{ width: 24, height: 24 }}
                  resizeMode="contain"
                />
              ),
            }}
          />
        </Tab.Navigator>
      </NavigationContainer>
      {/* {activeIndex <= 3 && !drawerOpen && (
        <View style={styles.dotContainer}>
          {[...Array(totalScreens)].map((_, index) => (
            <View
              key={index}
              style={[
                styles.dot,
                {
                  backgroundColor:
                    index === activeIndex ? "#006271" : "#C4C4C4",
                  width: index === activeIndex ? 9 : 6,
                  height: index === activeIndex ? 9 : 6,
                },
              ]}
            />
          ))}
        </View>
      )} */}
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  dotContainer: {
    flexDirection: "row",
    justifyContent: "center",
    marginBottom: 20,
  },
  dot: {
    width: 10,
    height: 10,
    borderRadius: 5,
    marginHorizontal: 5,
    bottom: 60,
  },
});
